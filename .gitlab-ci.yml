image: docker:20.10

services:
  - docker:dind

stages:
  - build
  - test
  - release
  - preprod
  - integration
  - prod

job:
  stage: build
  script:
    - echo "I'm a job"

#secrets-scanning:
 # stage: build
  #script:
   # - docker run -v $(pwd):/src --rm hysnsec/detect-secrets --repo_path /src file:///src --json | tee detect-secrets.json
  #artifacts:
   # paths: [detect-secrets.json]
    #when: always

zap-baseline:
  stage: integration
  before_script:
    - docker pull softwaresecurityproject/zap-stable:2.13.0
  script:
    - docker run --user $(id -u):$(id -g) -w /zap -v $(pwd):/zap/wrk:rw --rm softwaresecurityproject/zap-stable:2.13.0 zap-baseline.py -t https://prod-s3zfidv9.lab.practical-devsecops.training -J zap-output.json
  after_script:
    - docker rmi softwaresecurityproject/zap-stable:2.13.0  # clean up the image to save the disk space
  artifacts:
    paths: [zap-output.json]
    when: always        # What does this do?
  allow_failure: true  # Optional


#os-hardening:
  #stage: prod
  #only:
   # - main
  #script: 
   # - echo "this is my attempt to harden"
  #allow_failure: true
  #artifacts:
  #  paths: [os-hardening.json]

  


# Dynamic Application Security Testing
#nmap:
  #stage: integration
  #script:
   # - docker pull hysnsec/nmap
    #- docker run --rm -v $(pwd):/tmp hysnsec/nmap -h devsecops-box-s3zfidv9 -o /tmp/nmap-out.xml
  #artifacts:
   # paths: [nmap_out.xml]
    #when: always
